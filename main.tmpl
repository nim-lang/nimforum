#! stdtmpl
#proc genMain(c: var TForumData, content: string,
#             title = "Nimrod Forum", additional_headers = ""): string =
#  result = ""
#  var stats: TForumStats
#  if c.isThreadsList: stats = c.getStats(false)
#  else:
#    stats = c.getStats(true)
#  end if
<!doctype html>
<html lang="en">
<head>
  <title>${XmlEncode(title)}</title>
  <link rel="stylesheet" href="${c.req.makeUri("css/normalize.css", absolute = false)}">
  <link rel="stylesheet" href="${c.req.makeUri("css/style.css", absolute = false)}">${additional_headers}
  <meta charset="UTF-8">
</head>
<body>
  <div id="wrapper">
    #let frontQuery = c.req.makeUri("/")
    <div id="nimbtn">
      <a href="${frontQuery}">Forum</a>
    </div>

    <div id="header">
      <span>Nimrod's <a href="http://nimrod-code.org/">homepage</a></span>
      <span><a href="http://nimrod-code.org/documentation.html">stable docs</a></span>
      <span><a href="http://build.nimrod-code.org/docs/overview.html">development docs</a></span>
      <span><a href="https://github.com/Araq/Nimrod/issues">github issues</a></span>
      #if c.loggedIn:
        <a href="${frontQuery}logout" class="right">Logout</a>
        #let profileUrl = c.req.makeUri("profile/", false) &
        #  XMLencode(c.username)
        <span id="welcome"><a href="${profileUrl}">$c.username</a></span>
        <a href="$profileUrl">${genGravatar(c.email, 26)}</a>
      #else:
        <a href="${frontQuery}register" class="right">Register</a>
        <a href="${frontQuery}login" class="right">Login</a>
      #end if
    </div>

    <div id="topbar">
       ${c.genActionMenu}
    </div>

    <div id="content">
      $content
      <span style="color:red">$c.errorMsg</span>
    </div>
    #if c.req.pathInfo.normalizeUri notin noPageNums:
        ${c.genPagenumNav(stats)}
    #end if
    <div id="topbar">
       ${c.genActionMenu}
    </div>

    #if c.isThreadsList:
      ${c.genListOnline(stats)}
    #end if
    <div id="footerPush"></div>
  </div>
  <div id="footer">
  <span>Written in <a href="http://nimrod-code.org/">Nimrod</a> using <a href="https://github.com/dom96/jester">Jester</a></span>
  <span> | <a href="https://github.com/nimrod-code/nimforum">Fork on Github</a></span>
  <span style="float:right;">Generated in ${int((epochTime()-c.startTime)*1000.0)}ms</span>
  </div>
</body>
</html>
#end proc
#
#proc genRSSHeaders(c: var TForumData): string =
#  result = ""
<link href="${c.req.makeUri("threadActivity.xml")}" title="Thread activity"
  type="application/atom+xml" rel="alternate">
#end proc
#
#proc genRSS(c: var TForumData): string =
#  result = ""
#  var stats: TForumStats
#  let frontQuery = c.req.makeUri("/")
#  if c.isThreadsList: stats = c.getStats(false)
#  else:
#    stats = c.getStats(true)
#  end if
#  const query = sql"""SELECT A.id, A.name,
#    strftime('%Y-%m-%dT%H:%M:%S', (A.modified)),
#    COUNT(B.id), C.name, B.content
#    FROM thread AS A, post AS B, person AS C
#    WHERE A.id = b.thread AND B.author = C.id
#    GROUP BY B.thread
#    ORDER BY modified DESC LIMIT ?"""
#  const threadId = 0
#  const name = 1
#  const threadDate = 2
#  const postCount = 3
#  const postAuthor = 4
#  const postContent = 5
#  let recent = GetValue(db, sql"""SELECT
#    strftime('%Y-%m-%dT%H:%M:%S', (modified)) FROM thread
#    ORDER BY modified DESC LIMIT 1""")
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Nimrod forum thread activity</title>
    <link href="${c.req.makeUri("/threadActivity.xml")}" rel="self" />
    <link href="${frontQuery}" rel="self" />
    <id>${frontQuery}</id>
    <updated>${recent}</updated>
# for row in Rows(db, query, 10):
    <entry>
        <title>${XMLencode(%name)}</title>
        <id>urn:entry:${%threadid}</id>
        <link rel="alternate" type="text/html"
          href="${c.req.makeUri(c.genThreadUrl(threadid = %threadid))}"/>
        <updated>${%threadDate}</updated>
        <content type="text"
>Posts ${postCount}, ${XMLEncode(%postAuthor)} said: ${XMLEncode(%postContent)}</content>
    </entry>
# end for
</feed>
#end proc
